// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: aspia.router.common.proto

package info.malenkov.aspiabot.proto;

public interface RelayKeyOrBuilder extends
    // @@protoc_insertion_point(interface_extends:info.malenkov.aspiabot.proto.RelayKey)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Unique key identifier in the proxy pool.
   * </pre>
   *
   * <code>uint32 key_id = 1;</code>
   * @return The keyId.
   */
  int getKeyId();

  /**
   * <pre>
   * Key type.
   * </pre>
   *
   * <code>.info.malenkov.aspiabot.proto.RelayKey.Type type = 2;</code>
   * @return The enum numeric value on the wire for type.
   */
  int getTypeValue();
  /**
   * <pre>
   * Key type.
   * </pre>
   *
   * <code>.info.malenkov.aspiabot.proto.RelayKey.Type type = 2;</code>
   * @return The type.
   */
  info.malenkov.aspiabot.proto.RelayKey.Type getType();

  /**
   * <pre>
   * Encryption algorithm.
   * </pre>
   *
   * <code>.info.malenkov.aspiabot.proto.RelayKey.Encryption encryption = 3;</code>
   * @return The enum numeric value on the wire for encryption.
   */
  int getEncryptionValue();
  /**
   * <pre>
   * Encryption algorithm.
   * </pre>
   *
   * <code>.info.malenkov.aspiabot.proto.RelayKey.Encryption encryption = 3;</code>
   * @return The encryption.
   */
  info.malenkov.aspiabot.proto.RelayKey.Encryption getEncryption();

  /**
   * <pre>
   * Public key of the proxy.
   * </pre>
   *
   * <code>bytes public_key = 4;</code>
   * @return The publicKey.
   */
  com.google.protobuf.ByteString getPublicKey();

  /**
   * <pre>
   * Initialization vector.
   * </pre>
   *
   * <code>bytes iv = 5;</code>
   * @return The iv.
   */
  com.google.protobuf.ByteString getIv();
}
